{"version":3,"sources":["webpack://RevLearnBackend/./src/libs/lambda.ts","webpack://RevLearnBackend/external \"@middy/core\"","webpack://RevLearnBackend/external \"@middy/http-json-body-parser\"","webpack://RevLearnBackend/external \"source-map-support/register\"","webpack://RevLearnBackend/webpack/bootstrap","webpack://RevLearnBackend/webpack/runtime/compat get default export","webpack://RevLearnBackend/webpack/runtime/define property getters","webpack://RevLearnBackend/webpack/runtime/hasOwnProperty shorthand","webpack://RevLearnBackend/webpack/runtime/make namespace object","webpack://RevLearnBackend/./src/functions/upload/Handler.ts"],"names":["middyfy","handler","use","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","main","async","event","body","console","log","err","statusCode","headers","JSON","stringify"],"mappings":"iGAMO,MAAMA,EAAWC,GACf,IAAMA,GAASC,IAAI,Q,QCP5BC,EAAOC,QAAUC,QAAQ,gB,QCAzBF,EAAOC,QAAUC,QAAQ,iC,OCAzBF,EAAOC,QAAUC,QAAQ,iCCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCpBfG,EAAoBK,EAAKT,IACxB,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,IAAOX,EAAiB,QACxB,IAAM,EAEP,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRN,EAAoBQ,EAAI,CAACX,EAASa,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5EE,OAAOC,eAAejB,EAASc,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,EAAoBsB,EAAKzB,IACH,oBAAX0B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAejB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAejB,EAAS,aAAc,CAAE4B,OAAO,K,gDC2BvD,MA+BaC,GAAO,E,OAAA,IA/B8CC,MAAOC,IAEvE,IACE,MAAM,KAAEC,GAASD,EAEjBE,QAAQC,IAAI,SAAUH,GACtBE,QAAQC,IAAI,eAAgBH,EAAMC,MAQlC,MAAMG,GACNF,QAAQC,IAAIC,GAYd,MAViB,CACfC,WAAY,IACZC,QAAS,CACP,+BAAgC,sBAChC,8BAA+B,IAC/B,+BAAgC,oBAElCL,KAAMM,KAAKC,UAAU,+B","file":"src/functions/upload/Handler.js","sourcesContent":["/* eslint-disable arrow-body-style */\n/* eslint-disable import/prefer-default-export */\nimport middy from '@middy/core';\nimport middyJsonBodyParser from '@middy/http-json-body-parser';\nimport { ValidatedEventAPIGatewayProxyEvent } from './apiGateway';\n\nexport const middyfy = (handler: ValidatedEventAPIGatewayProxyEvent<{ readonly type: 'object'; readonly properties: { readonly name: { readonly type: 'string'; }; }; readonly required: readonly ['name']; }>) => {\n  return middy(handler).use(middyJsonBodyParser());\n};\n","module.exports = require(\"@middy/core\");","module.exports = require(\"@middy/http-json-body-parser\");","module.exports = require(\"source-map-support/register\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable arrow-body-style */\r\nimport 'source-map-support/register';\r\n\r\n// import * as AWS from 'aws-sdk';\r\nimport Multipart from 'parse-multipart';\r\nimport type { ValidatedEventAPIGatewayProxyEvent } from '../../libs/apiGateway';\r\nimport { formatJSONResponse } from '../../libs/apiGateway';\r\nimport { middyfy } from '../../libs/lambda';\r\nimport schema from './Schema';\r\n\r\n/* const BUCKETNAME: string = 'revlearnbackend-dev-serverlessdeploymentbucket-1imwbwu2cp9ej';\r\nconst IAM_USER_KEY: string = 'AKIAVNCJ6EQEYAOALCO2';\r\nconst IAM_USER_SECRET: string = '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';\r\n\r\nconst s3bucket = new AWS.S3({\r\n  accessKeyId: IAM_USER_KEY,\r\n  secretAccessKey: IAM_USER_SECRET,\r\n}); */\r\n\r\n/* function uploadObject(objectName, objectData) {\r\n  const params: AWS.S3.PutObjectRequest = {\r\n    Bucket: BUCKETNAME,\r\n    Key: objectName,\r\n    Body: objectData,\r\n  };\r\n\r\n  s3bucket.upload(params, (err, data) => {\r\n    if(err) throw err;\r\n    console.log(`File uploaded successfully at ${data.Location}`);\r\n  });\r\n} */\r\n\r\nconst Upload: ValidatedEventAPIGatewayProxyEvent<typeof schema> = async (event) => {\r\n  let text: string;\r\n  try {\r\n    const { body } = event;\r\n    // const boundary = event.;\r\n    console.log('Body: ', event);\r\n    console.log('Event Body: ', event.body);\r\n\r\n    /* const buff = Buffer.from('c3RhY2thYnVzZS5jb20=', 'base64');\r\n    text = buff.toString('ascii');\r\n    console.log('Text', text); */\r\n    /* const parts = Multipart.parse(event, boundary);\r\n\r\n    console.log(parts); */\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n  const response = {\r\n    statusCode: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Headers': 'multipart/form-data',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'OPTIONS,POST,GET',\r\n    },\r\n    body: JSON.stringify('Returning from upload '),\r\n  };\r\n  // uploadObject('this_is_the_name/test', 'This is the content');\r\n  return response;\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const main = middyfy(Upload);\r\n"],"sourceRoot":""}